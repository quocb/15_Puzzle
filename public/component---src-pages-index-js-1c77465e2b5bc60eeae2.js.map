{"version":3,"sources":["webpack:///./src/components/Box.js","webpack:///./src/pages/index.js","webpack:///./node_modules/react-hot-loader/index.js","webpack:///./node_modules/react-hot-loader/dist/react-hot-loader.production.min.js"],"names":["Box","_ref","image","boxSize","row","col","clickHandler","canvas","useRef","useEffect","current","getContext","drawImage","react_default","a","createElement","onClick","id","ref","width","height","setConfig","onComponentRegister","type","name","file","String","indexOf","cold","Index","img","_useState","useState","boxesArr","setBoxesArr","_useState2","emptyPos","setEmptyPos","e","target","console","log","getNewPos","oldPos","parseInt","Math","random","boxes","boxRow","NUM_COLS","push","key","boxProps","SIZE","components_Box","counter","emptyRow","emptyCol","newRow","newCol","scramble","alt","src","module","exports","__webpack_require__","Object","defineProperty","value","React","default","AppContainer","Children","only","children","hot","areComponentsEqual","n","configureComponent"],"mappings":"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","file":"component---src-pages-index-js-1c77465e2b5bc60eeae2.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst Box = ({ image, boxSize, row, col, clickHandler }) => {\n  const canvas = useRef();\n  useEffect(() => {\n    const ctx = canvas.current.getContext('2d');\n    ctx.drawImage(\n      image,\n      0 + col * boxSize,\n      0 + row * boxSize,\n      boxSize,\n      boxSize,\n      0,\n      0,\n      boxSize,\n      boxSize\n    );\n  });\n\n  return (\n    <div onClick={clickHandler}>\n      <canvas\n        id={`${row}${col}`}\n        ref={canvas}\n        width={boxSize}\n        height={boxSize}\n      />\n    </div>\n  );\n};\n\nexport default Box;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Box from './../components/Box';\nimport { setConfig, cold } from 'react-hot-loader';\nsetConfig({\n  onComponentRegister: (type, name, file) =>\n    (String(type).indexOf('useState') > 0 ||\n      String(type).indexOf('useEffect') > 0) &&\n    cold(type),\n});\n\n/**\n * Main app component. Renders boxes.\n */\nconst Index = () => {\n  const SIZE = 700; // height/width of board\n  const NUM_COLS = 4; // number of cols/rows to divide by\n  const img = useRef(); //\n  const [boxesArr, setBoxesArr] = useState();\n  const [emptyPos, setEmptyPos] = useState([3, 3]);\n\n  // const [imgSrc, setImg] = useState(\n  //   \"https://source.unsplash.com/random/700x700\"\n  // )\n\n  /**\n   * Handles all box clicks\n   */\n  const clickHandler = e => {\n    let col = e.target.id[0];\n    let row = e.target.id[1];\n    console.log(emptyPos);\n    // setEmptyPos(prev => [1, 2]);\n  };\n\n  /**\n   * Takes in a number 0-3 and returns a new valid position 0-3\n   */\n  const getNewPos = oldPos => {\n    // if pos is 3 or 0 there's only 1 way to go.\n    if (parseInt(oldPos) === 3) {\n      return 2;\n    } else if (parseInt(oldPos) === 0) {\n      return 1;\n    }\n    // pos is 1-2. flip coin to add or sub 1\n    if (Math.random() * 2 > 1) return parseInt(oldPos) + 1;\n    return parseInt(oldPos) - 1;\n  };\n\n  /**\n   * Takes the initial box array and shuffles it\n   */\n  const scramble = boxes => {\n    let counter = 0;\n    let emptyRow = emptyPos[0];\n    let emptyCol = emptyPos[1];\n    let newRow = emptyRow;\n    let newCol = emptyCol;\n    console.log('TCL: FIRST -> [newRow, newCol]', [emptyRow, emptyCol]);\n\n    while (counter++ < 100) {\n      // flip a coin to see if we're going to change row or col\n      if (Math.random() * 2 > 1) {\n        // change row\n        newRow = getNewPos(emptyRow);\n      } else {\n        // change col\n        newCol = getNewPos(emptyCol);\n      }\n\n      // swap empty col with new empty col\n      [boxes[emptyRow][emptyCol], boxes[newRow][newCol]] = [\n        boxes[newRow][newCol],\n        boxes[emptyRow][emptyCol],\n      ];\n\n      // set where empty is\n      emptyRow = newRow;\n      emptyCol = newCol;\n    }\n    console.log('TCL: END -> [newRow, newCol]', [newRow, newCol]);\n    setEmptyPos([newRow, newCol]);\n    console.log(emptyPos);\n  };\n\n  /**\n   * ComponentDidMount - creates array of 15 box + 1 empty\n   */\n  useEffect(() => {\n    // container to hold arrays\n    const boxes = [];\n\n    // loop through to create each row array\n    for (let row = 0; row < NUM_COLS; row += 1) {\n      const boxRow = [];\n      // loop through to fill boxes in the row\n      for (let col = 0; col < NUM_COLS; col += 1) {\n        if (row === NUM_COLS - 1 && col === NUM_COLS - 1) {\n          // render empty div for last box\n          boxRow.push(<div key={`${row}-${col}`} id=\"empty-box\" />);\n        } else {\n          // define props for a box so we can spread them.\n          const boxProps = {\n            row,\n            col,\n            clickHandler,\n            image: img.current,\n            boxSize: SIZE / NUM_COLS,\n            key: `${row}-${col}`,\n          };\n          boxRow.push(<Box {...boxProps} />);\n        }\n      }\n      boxes.push(boxRow);\n    }\n\n    scramble(boxes);\n\n    setBoxesArr(boxes);\n  }, []);\n\n  return (\n    <div id=\"board\">\n      {boxesArr}\n      <img\n        ref={img}\n        id=\"puzzle-image\"\n        alt=\"puzzle\"\n        src=\"https://images.unsplash.com/photo-1556695725-3cc4a29d4ef7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=700&h=700&fit=crop&ixid=eyJhcHBfaWQiOjF9\"\n      />\n      {/* <img ref={img} src=\"https://source.unsplash.com/random/700x700\" /> */}\n    </div>\n  );\n};\n\nexport default Index;\n","'use strict'\n\nvar hasWindow = typeof window !== 'undefined';\n\nif (!module.hot || process.env.NODE_ENV === 'production' || !hasWindow) {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else {\n  var evalAllowed = false;\n  try {\n    eval('evalAllowed = true');\n  } catch (e) {\n    // eval not allowed due to CSP\n  }\n\n  // RHL needs setPrototypeOf to operate Component inheritance, and eval to patch methods\n  var jsFeaturesPresent = !!Object.setPrototypeOf;\n\n  if (!jsFeaturesPresent || !evalAllowed) {\n    // we are not in prod mode, but RHL could not be activated\n    console.warn('React-Hot-Loader is not supported in this environment.');\n    module.exports = require('./dist/react-hot-loader.production.min.js');\n  } else {\n    module.exports = window.reactHotLoaderGlobal = require('./dist/react-hot-loader.development.js');\n  }\n}","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0});var React=_interopDefault(require(\"react\"));function AppContainer(e){return React.Children.only(e.children)}var hot_prod=function(){return function(e){return e}},areComponentsEqual=function(e,n){return e===n},setConfig=function(){},cold=function(e){return e},configureComponent=function(){};exports.AppContainer=AppContainer,exports.hot=hot_prod,exports.areComponentsEqual=areComponentsEqual,exports.setConfig=setConfig,exports.cold=cold,exports.configureComponent=configureComponent;\n"],"sourceRoot":""}